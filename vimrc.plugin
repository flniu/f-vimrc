" Plugin configuration, sourced by vimrc
" Author: Francis Niu (https://github.com/flniu)
" Last Change: 2020-08-18

" vim-plug {{{
call plug#begin()

" Vim only{{{
if !g:is_nvim
  " NerdTree, folder tree explorer
  Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
  " Tagbar (require: ctags), displays tags window
  "Plug 'majutsushi/tagbar', { 'on': 'TagbarToggle' }
  " Smart buffer closing
  Plug 'cespare/vim-sbd'
  " Diff directories
  Plug 'vim-scripts/DirDiff.vim'
  " vim-snippets, depends on ultisnips
  "Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
endif
"}}}

" General {{{
" Color schemes
Plug 'flniu/f-vim-colors'
" MRU, access most recently used files
Plug 'yegappan/mru'
let MRU_Exclude_Files = '.*MSG$'
" CtrlSF (require: ack), search everywhere
"Plug 'dyng/ctrlsf.vim'
" EasyMotion, move cursor more easily
"Plug 'easymotion/vim-easymotion'
" ChooseWin, jump windows more easily
Plug 't9md/vim-choosewin', { 'on': '<Plug>(choosewin)' }
" Mark, highlight multiple words
Plug 'tracyone/mark.vim'
" CmdlineComplete, complete command-line from current file
Plug 'flniu/CmdlineComplete'
" GitGutter, shows a git diff in the gutter
Plug 'airblade/vim-gitgutter'
" fzf
"Plug 'junegunn/fzf'
"}}}

" Editing {{{
" EditorConfig
Plug 'editorconfig/editorconfig-vim'
" SuperTab, Perform all insert mode completions with Tab
"Plug 'ervandew/supertab'
" Insert or delete brackets, parens, quotes in pair
"Plug 'jiangmiao/auto-pairs'
" surround, quoting/parenthesizing
Plug 'tpope/vim-surround'
" pairs of handy bracket mappings
Plug 'tpope/vim-unimpaired'
" Tabular, text alignment
Plug 'godlygeek/tabular'
" NERD Commenter
Plug 'scrooloose/nerdcommenter'
" Expand visual region
Plug 'terryma/vim-expand-region'
"}}}

" Reading & Writing {{{
" Syntax and settings for plain text
Plug 'flniu/txt.vim'
" Markdown Vim Mode
"Plug 'flniu/vim-markdown'
"let g:vim_markdown_toc_autofit = 1
"let g:vim_markdown_frontmatter = 1
"}}}

" Web development {{{
" Emmet, toolkit for web-developers
Plug 'mattn/emmet-vim'
" Paint css colors with the real color
"Plug 'lilydjwg/colorizer'
"let g:colorizer_maxlines = 1000
"}}}

" Syntaxs{{{
" Syntax for Python
Plug 'hdima/python-syntax'
let python_highlight_all = 1
Plug 'psf/black', { 'branch': 'stable' }
" CSV
Plug 'mechatroner/rainbow_csv'
" Syntax for Vue
"Plug 'posva/vim-vue'
"let g:vue_pre_processors = ['typescript', 'scss']
"let g:vue_pre_processors = 'detect_on_enter'
"autocmd FileType vue syntax sync fromstart
" Syntax for Confluence wiki
"Plug 'flniu/confluencewiki.vim'
" Syntax for nginx
Plug 'vim-scripts/nginx.vim'
" Syntax for TOML
Plug 'cespare/vim-toml'
" Syntax for Jinja2
"Plug 'Glench/Vim-Jinja2-Syntax'
" Syntax for w3af
"Plug 'vim-scripts/w3af.vim'
"au BufNewFile,BufRead *.w3af setf w3af
" Syntax for vault hcl
"Plug 'b4b4r07/vim-hcl'
"au FileType hcl set et ts=2 sw=2
" Syntax for ER
"Plug 'flniu/er.vim'
" Syntax for thrift
Plug 'solarnz/thrift.vim'
" Syntax for PlantUML
Plug 'aklt/plantuml-syntax'
"}}}

call plug#end()
"}}}

" Plugin variables & key-mappings {{{
" NerdTree
if exists(':NERDTreeToggle') == 2
  nmap <F9> :NERDTreeToggle<CR>
  let NERDTreeIgnore = ['\.pyc$']
endif
" Tagbar
if exists(':TagbarToggle') == 2
  nmap <F12> :TagbarToggle<CR>
endif
" CtrlSF
nmap <C-S-F> <Plug>CtrlSFPrompt
vmap <C-S-F> <Plug>CtrlSFVwordPath
" ChooseWin
nmap - <Plug>(choosewin)
" snips personal info
let g:snips_author = 'Francis Niu'
let g:snips_github = 'https://github.com/flniu'
"}}}

" vim:et:ts=2:sw=2:fdm=marker:
